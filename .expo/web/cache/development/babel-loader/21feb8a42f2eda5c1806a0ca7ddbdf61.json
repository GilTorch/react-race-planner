{"ast":null,"code":"var _jsxFileName = \"/Users/nick/work/nk/sr/ScriptoRerum/components/CustomText.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from 'prop-types';\n\nvar CustomText = function CustomText(_ref) {\n  var children = _ref.children,\n      type = _ref.type,\n      style = _ref.style;\n\n  var fontType = function fontType(passedType) {\n    switch (passedType) {\n      case 'black':\n        return 'Roboto-Black';\n\n      case 'black-italic':\n        return 'RobotoBlackItalic';\n\n      case 'bold':\n        return 'RobotoBold';\n\n      case 'bold-italic':\n        return 'RobotoBoldItalic';\n\n      case 'light':\n        return 'RobotoLight';\n\n      case 'light-italic':\n        return 'RobotoLightItalic';\n\n      case 'medium':\n        return 'RobotoMedium';\n\n      case 'regular':\n        return 'RobotoRegular';\n\n      case 'thin':\n        return 'RobotoThin';\n\n      default:\n        return 'RobotoRegular';\n    }\n  };\n\n  var font = fontType(type);\n  var customStyle = [{\n    fontFamily: font\n  }, style || {}];\n  return React.createElement(Text, {\n    style: customStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }, children);\n};\n\nCustomText.defaultProps = {\n  type: 'normal',\n  style: {}\n};\nCustomText.propTypes = {\n  children: PropTypes.node.isRequired,\n  type: PropTypes.string,\n  style: PropTypes.object\n};\nexport default CustomText;","map":{"version":3,"sources":["/Users/nick/work/nk/sr/ScriptoRerum/components/CustomText.js"],"names":["React","PropTypes","CustomText","children","type","style","fontType","passedType","font","customStyle","fontFamily","defaultProps","propTypes","node","isRequired","string","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA+B;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAChD,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,UAAU,EAAI;AAC7B,YAAQA,UAAR;AACE,WAAK,OAAL;AACE,eAAO,cAAP;;AACF,WAAK,cAAL;AACE,eAAO,mBAAP;;AACF,WAAK,MAAL;AACE,eAAO,YAAP;;AACF,WAAK,aAAL;AACE,eAAO,kBAAP;;AACF,WAAK,OAAL;AACE,eAAO,aAAP;;AACF,WAAK,cAAL;AACE,eAAO,mBAAP;;AACF,WAAK,QAAL;AACE,eAAO,cAAP;;AACF,WAAK,SAAL;AACE,eAAO,eAAP;;AACF,WAAK,MAAL;AACE,eAAO,YAAP;;AACF;AACE,eAAO,eAAP;AApBJ;AAsBD,GAvBD;;AAyBA,MAAMC,IAAI,GAAGF,QAAQ,CAACF,IAAD,CAArB;AACA,MAAMK,WAAW,GAAG,CAAC;AAAEC,IAAAA,UAAU,EAAEF;AAAd,GAAD,EAAuBH,KAAK,IAAI,EAAhC,CAApB;AACA,SAAO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BN,QAA3B,CAAP;AACD,CA7BD;;AA+BAD,UAAU,CAACS,YAAX,GAA0B;AACxBP,EAAAA,IAAI,EAAE,QADkB;AAExBC,EAAAA,KAAK,EAAE;AAFiB,CAA1B;AAKAH,UAAU,CAACU,SAAX,GAAuB;AACrBT,EAAAA,QAAQ,EAAEF,SAAS,CAACY,IAAV,CAAeC,UADJ;AAErBV,EAAAA,IAAI,EAAEH,SAAS,CAACc,MAFK;AAGrBV,EAAAA,KAAK,EAAEJ,SAAS,CAACe;AAHI,CAAvB;AAMA,eAAed,UAAf","sourcesContent":["import React from 'react';\nimport { Text } from 'react-native';\nimport PropTypes from 'prop-types';\n\nconst CustomText = ({ children, type, style }) => {\n  const fontType = passedType => {\n    switch (passedType) {\n      case 'black':\n        return 'Roboto-Black';\n      case 'black-italic':\n        return 'RobotoBlackItalic';\n      case 'bold':\n        return 'RobotoBold';\n      case 'bold-italic':\n        return 'RobotoBoldItalic';\n      case 'light':\n        return 'RobotoLight';\n      case 'light-italic':\n        return 'RobotoLightItalic';\n      case 'medium':\n        return 'RobotoMedium';\n      case 'regular':\n        return 'RobotoRegular';\n      case 'thin':\n        return 'RobotoThin';\n      default:\n        return 'RobotoRegular';\n    }\n  };\n\n  const font = fontType(type);\n  const customStyle = [{ fontFamily: font }, style || {}];\n  return <Text style={customStyle}>{children}</Text>;\n};\n\nCustomText.defaultProps = {\n  type: 'normal',\n  style: {}\n};\n\nCustomText.propTypes = {\n  children: PropTypes.node.isRequired,\n  type: PropTypes.string,\n  style: PropTypes.object\n};\n\nexport default CustomText;\n"]},"metadata":{},"sourceType":"module"}